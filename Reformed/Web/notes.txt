1) FETCH(REST url, METHOD, data) --> εκκινεί τη διαδικασία του url με την αντίστοιχη method 
από τον back end router. ειναι σαν να γραφω το Url στη μπαρα διευθύνσεων (σε αυτή την 
περίπτωση απλά θα έβλεπα το JSON που στέλνω raw).  

2)users folder: περιεχει πραγματα που πρεπει να εισαι authenticated για να τα παρεις. άρα, οταν 
η express θα κανει use τον router που χειρίζεται το html, θα κανει χρηση της συναρτησης auth του 
Θοδωρη σαν middleware.

3)static folders:χρηση οταν θελω ο χρηστης να παιρνει κατι χωρις να χρησιμοποιησει τον router 
(για αυτο ολα τα css, images κλπ ειναι σε static φακελους). Εχε στο νου σου οτι, ενα Html ειναι 
στον υπολογιστη του χρηστη και για να παρεις τα assets τους απλα ξεκινας απο το φακελο που τα 
περιεχει κατευθειαν ως "/assets/μπλα μπλα μπλα".

4) Για τον διαχειριστη! Σε καθε back end ενεργεια πρεπει να κανω check if admin ως middleware. 
Αν λειτουργει το πεδίο adminpriv στο σεσσιον, τότε απλά το παίρνω απο εκεί, διαφορετικά θα 
χρησιμοποιω την isAdmin απο τον dbToNode.mjs

5) Η διαδικασία έχει ως εξής: το fetch, ζηταει απο back end. Το back end εκτελει το middleware
αν υπαρχει και αν ολα καλα, εκτελεί τη συνάρτηση του ορίσματος next. Η τελευταία, είναι υπέυθυνη
συνήθως για να φέρει δεδομένα από τη βάση ή από άλλα σημεία του σέρβερ (πχ αντμιν που θέλει stores 
κλπ που υπάρχουν σε JSON στον σερβερ).

6) Ερωτήματα 1+2 αντμιν: 
	6.1 Γεμισμα πινάκων απο JSON
	6.2 Ενημέρωση Διαγραφή Δεδομένων
	6.3 Ανέβασμα αλλαγών στη βάση και export νέο JSON Που θα κάνει Overwrite το παλιό
